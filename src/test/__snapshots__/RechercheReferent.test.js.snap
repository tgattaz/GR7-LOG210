// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddEmployeForm ne crash pas AddEmployeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddEmployeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <Divider
          horizontal={true}
        >
          Identité
        </Divider>,
        <FormGroup
          widths="equal"
        >
          <FormField>
            <label>
              Nom:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Prenom:
              <input
                name="prenom"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
        </FormGroup>,
        <br />,
        <Divider
          horizontal={true}
        >
          Adresse
        </Divider>,
        <FormGroup
          widths="equal"
        >
          <FormField>
            <label>
              Numéro Civique:
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Rue:
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Ville:
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Province:
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Code Postal:
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
        </FormGroup>,
        <br />,
        <Divider
          horizontal={true}
        >
          Télephones
        </Divider>,
        <FormGroup
          widths="equal"
        >
          <FormField>
            <label>
              Cellulaire:
              <input
                name="cellulaire"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Maison:
              <input
                name="maison"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Bureau:
              <input
                name="bureau"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
        </FormGroup>,
        <br />,
        <Divider
          horizontal={true}
        >
          Formations
        </Divider>,
        <FormGroup
          widths="equal"
        >
          <FormField>
            <label>
              Nom de la formation :
              <input
                name="formation"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Date d'optention du diplôme:
              <input
                name="dateformation"
                onChange={[Function]}
                placeholder="AAAA-MM-JJ"
                type="text"
              />
            </label>
          </FormField>
        </FormGroup>,
        <br />,
        <Divider
          horizontal={true}
        >
          Compte utilisateur
        </Divider>,
        <FormGroup
          widths="equal"
        >
          <FormField>
            <label>
              Courriel:
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <br />
          <FormField>
            <label>
              Mot de passe:
              <input
                name="motDePasse"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
        </FormGroup>,
        <br />,
        <FormField>
          <select
            name="role"
            onChange={[Function]}
            placeholder="Choisir un role"
          >
            <option>
              Choisir un rôle
            </option>
            <option
              value="1"
            >
              Directeur
            </option>
            <option
              value="2"
            >
              Coordonnateur
            </option>
            <option
              value="3"
            >
              Adjoint-Coordennateur
            </option>
            <option
              value="4"
            >
              Intervenant
            </option>
          </select>
        </FormField>,
        <br />,
        <Button
          as="button"
          role="button"
        >
           Enregistrer 
        </Button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Identité",
          "horizontal": true,
        },
        "ref": null,
        "rendered": "Identité",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormField>
              <label>
                Nom:
                <input
                  name="nom"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Prenom:
                <input
                  name="prenom"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
          ],
          "widths": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Nom:
                <input
                  name="nom"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Nom:",
                  <input
                    name="nom"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Nom:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "nom",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Prenom:
                <input
                  name="prenom"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Prenom:",
                  <input
                    name="prenom"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Prenom:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "prenom",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Adresse",
          "horizontal": true,
        },
        "ref": null,
        "rendered": "Adresse",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormField>
              <label>
                Numéro Civique:
                <input
                  name="noCivique"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Rue:
                <input
                  name="rue"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Ville:
                <input
                  name="ville"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Province:
                <input
                  name="province"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Code Postal:
                <input
                  name="codePostal"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
          ],
          "widths": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Numéro Civique:
                <input
                  name="noCivique"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Numéro Civique:",
                  <input
                    name="noCivique"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Numéro Civique:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "noCivique",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Rue:
                <input
                  name="rue"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Rue:",
                  <input
                    name="rue"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Rue:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "rue",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Ville:
                <input
                  name="ville"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Ville:",
                  <input
                    name="ville"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Ville:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "ville",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Province:
                <input
                  name="province"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Province:",
                  <input
                    name="province"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Province:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "province",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Code Postal:
                <input
                  name="codePostal"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Code Postal:",
                  <input
                    name="codePostal"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Code Postal:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "codePostal",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Télephones",
          "horizontal": true,
        },
        "ref": null,
        "rendered": "Télephones",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormField>
              <label>
                Cellulaire:
                <input
                  name="cellulaire"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Maison:
                <input
                  name="maison"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Bureau:
                <input
                  name="bureau"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
          ],
          "widths": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Cellulaire:
                <input
                  name="cellulaire"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Cellulaire:",
                  <input
                    name="cellulaire"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Cellulaire:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "cellulaire",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Maison:
                <input
                  name="maison"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Maison:",
                  <input
                    name="maison"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Maison:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "maison",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Bureau:
                <input
                  name="bureau"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Bureau:",
                  <input
                    name="bureau"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Bureau:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "bureau",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Formations",
          "horizontal": true,
        },
        "ref": null,
        "rendered": "Formations",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormField>
              <label>
                Nom de la formation :
                <input
                  name="formation"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Date d'optention du diplôme:
                <input
                  name="dateformation"
                  onChange={[Function]}
                  placeholder="AAAA-MM-JJ"
                  type="text"
                />
              </label>
            </FormField>,
          ],
          "onSubmit": undefined,
          "widths": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Nom de la formation :
                <input
                  name="formation"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Nom de la formation :",
                  <input
                    name="formation"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Nom de la formation :",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "formation",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Date d'optention du diplôme:
                <input
                  name="dateformation"
                  onChange={[Function]}
                  placeholder="AAAA-MM-JJ"
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Date d'optention du diplôme:",
                  <input
                    name="dateformation"
                    onChange={[Function]}
                    placeholder="AAAA-MM-JJ"
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Date d'optention du diplôme:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "dateformation",
                    "onChange": [Function],
                    "placeholder": "AAAA-MM-JJ",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Compte utilisateur",
          "horizontal": true,
        },
        "ref": null,
        "rendered": "Compte utilisateur",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <FormField>
              <label>
                Courriel:
                <input
                  name="courriel"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <br />,
            <FormField>
              <label>
                Mot de passe:
                <input
                  name="motDePasse"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
          ],
          "widths": "equal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Courriel:
                <input
                  name="courriel"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Courriel:",
                  <input
                    name="courriel"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Courriel:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "courriel",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Mot de passe:
                <input
                  name="motDePasse"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Mot de passe:",
                  <input
                    name="motDePasse"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Mot de passe:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "motDePasse",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <select
            name="role"
            onChange={[Function]}
            placeholder="Choisir un role"
          >
            <option>
              Choisir un rôle
            </option>
            <option
              value="1"
            >
              Directeur
            </option>
            <option
              value="2"
            >
              Coordonnateur
            </option>
            <option
              value="3"
            >
              Adjoint-Coordennateur
            </option>
            <option
              value="4"
            >
              Intervenant
            </option>
          </select>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option>
                Choisir un rôle
              </option>,
              <option
                value="1"
              >
                Directeur
              </option>,
              <option
                value="2"
              >
                Coordonnateur
              </option>,
              <option
                value="3"
              >
                Adjoint-Coordennateur
              </option>,
              <option
                value="4"
              >
                Intervenant
              </option>,
            ],
            "name": "role",
            "onChange": [Function],
            "placeholder": "Choisir un role",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choisir un rôle",
              },
              "ref": null,
              "rendered": "Choisir un rôle",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Directeur",
                "value": "1",
              },
              "ref": null,
              "rendered": "Directeur",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Coordonnateur",
                "value": "2",
              },
              "ref": null,
              "rendered": "Coordonnateur",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Adjoint-Coordennateur",
                "value": "3",
              },
              "ref": null,
              "rendered": "Adjoint-Coordennateur",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Intervenant",
                "value": "4",
              },
              "ref": null,
              "rendered": "Intervenant",
              "type": "option",
            },
          ],
          "type": "select",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": " Enregistrer ",
          "role": "button",
        },
        "ref": null,
        "rendered": " Enregistrer ",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <Divider
            horizontal={true}
          >
            Identité
          </Divider>,
          <FormGroup
            widths="equal"
          >
            <FormField>
              <label>
                Nom:
                <input
                  name="nom"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Prenom:
                <input
                  name="prenom"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
          </FormGroup>,
          <br />,
          <Divider
            horizontal={true}
          >
            Adresse
          </Divider>,
          <FormGroup
            widths="equal"
          >
            <FormField>
              <label>
                Numéro Civique:
                <input
                  name="noCivique"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Rue:
                <input
                  name="rue"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Ville:
                <input
                  name="ville"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Province:
                <input
                  name="province"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Code Postal:
                <input
                  name="codePostal"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
          </FormGroup>,
          <br />,
          <Divider
            horizontal={true}
          >
            Télephones
          </Divider>,
          <FormGroup
            widths="equal"
          >
            <FormField>
              <label>
                Cellulaire:
                <input
                  name="cellulaire"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Maison:
                <input
                  name="maison"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Bureau:
                <input
                  name="bureau"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
          </FormGroup>,
          <br />,
          <Divider
            horizontal={true}
          >
            Formations
          </Divider>,
          <FormGroup
            widths="equal"
          >
            <FormField>
              <label>
                Nom de la formation :
                <input
                  name="formation"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Date d'optention du diplôme:
                <input
                  name="dateformation"
                  onChange={[Function]}
                  placeholder="AAAA-MM-JJ"
                  type="text"
                />
              </label>
            </FormField>
          </FormGroup>,
          <br />,
          <Divider
            horizontal={true}
          >
            Compte utilisateur
          </Divider>,
          <FormGroup
            widths="equal"
          >
            <FormField>
              <label>
                Courriel:
                <input
                  name="courriel"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <br />
            <FormField>
              <label>
                Mot de passe:
                <input
                  name="motDePasse"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
          </FormGroup>,
          <br />,
          <FormField>
            <select
              name="role"
              onChange={[Function]}
              placeholder="Choisir un role"
            >
              <option>
                Choisir un rôle
              </option>
              <option
                value="1"
              >
                Directeur
              </option>
              <option
                value="2"
              >
                Coordonnateur
              </option>
              <option
                value="3"
              >
                Adjoint-Coordennateur
              </option>
              <option
                value="4"
              >
                Intervenant
              </option>
            </select>
          </FormField>,
          <br />,
          <Button
            as="button"
            role="button"
          >
             Enregistrer 
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Identité",
            "horizontal": true,
          },
          "ref": null,
          "rendered": "Identité",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormField>
                <label>
                  Nom:
                  <input
                    name="nom"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Prenom:
                  <input
                    name="prenom"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
            ],
            "widths": "equal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Nom:
                  <input
                    name="nom"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Nom:",
                    <input
                      name="nom"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Nom:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "nom",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Prenom:
                  <input
                    name="prenom"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Prenom:",
                    <input
                      name="prenom"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Prenom:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "prenom",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Adresse",
            "horizontal": true,
          },
          "ref": null,
          "rendered": "Adresse",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormField>
                <label>
                  Numéro Civique:
                  <input
                    name="noCivique"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Rue:
                  <input
                    name="rue"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Ville:
                  <input
                    name="ville"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Province:
                  <input
                    name="province"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Code Postal:
                  <input
                    name="codePostal"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
            ],
            "widths": "equal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Numéro Civique:
                  <input
                    name="noCivique"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Numéro Civique:",
                    <input
                      name="noCivique"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Numéro Civique:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "noCivique",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Rue:
                  <input
                    name="rue"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Rue:",
                    <input
                      name="rue"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Rue:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "rue",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Ville:
                  <input
                    name="ville"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Ville:",
                    <input
                      name="ville"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Ville:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "ville",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Province:
                  <input
                    name="province"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Province:",
                    <input
                      name="province"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Province:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "province",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Code Postal:
                  <input
                    name="codePostal"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Code Postal:",
                    <input
                      name="codePostal"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Code Postal:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "codePostal",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Télephones",
            "horizontal": true,
          },
          "ref": null,
          "rendered": "Télephones",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormField>
                <label>
                  Cellulaire:
                  <input
                    name="cellulaire"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Maison:
                  <input
                    name="maison"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Bureau:
                  <input
                    name="bureau"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
            ],
            "widths": "equal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Cellulaire:
                  <input
                    name="cellulaire"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Cellulaire:",
                    <input
                      name="cellulaire"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Cellulaire:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "cellulaire",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Maison:
                  <input
                    name="maison"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Maison:",
                    <input
                      name="maison"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Maison:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "maison",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Bureau:
                  <input
                    name="bureau"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Bureau:",
                    <input
                      name="bureau"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Bureau:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "bureau",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Formations",
            "horizontal": true,
          },
          "ref": null,
          "rendered": "Formations",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormField>
                <label>
                  Nom de la formation :
                  <input
                    name="formation"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Date d'optention du diplôme:
                  <input
                    name="dateformation"
                    onChange={[Function]}
                    placeholder="AAAA-MM-JJ"
                    type="text"
                  />
                </label>
              </FormField>,
            ],
            "onSubmit": undefined,
            "widths": "equal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Nom de la formation :
                  <input
                    name="formation"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Nom de la formation :",
                    <input
                      name="formation"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Nom de la formation :",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "formation",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Date d'optention du diplôme:
                  <input
                    name="dateformation"
                    onChange={[Function]}
                    placeholder="AAAA-MM-JJ"
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Date d'optention du diplôme:",
                    <input
                      name="dateformation"
                      onChange={[Function]}
                      placeholder="AAAA-MM-JJ"
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Date d'optention du diplôme:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "dateformation",
                      "onChange": [Function],
                      "placeholder": "AAAA-MM-JJ",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Compte utilisateur",
            "horizontal": true,
          },
          "ref": null,
          "rendered": "Compte utilisateur",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormField>
                <label>
                  Courriel:
                  <input
                    name="courriel"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <br />,
              <FormField>
                <label>
                  Mot de passe:
                  <input
                    name="motDePasse"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
            ],
            "widths": "equal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Courriel:
                  <input
                    name="courriel"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Courriel:",
                    <input
                      name="courriel"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Courriel:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "courriel",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Mot de passe:
                  <input
                    name="motDePasse"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Mot de passe:",
                    <input
                      name="motDePasse"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Mot de passe:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "motDePasse",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <select
              name="role"
              onChange={[Function]}
              placeholder="Choisir un role"
            >
              <option>
                Choisir un rôle
              </option>
              <option
                value="1"
              >
                Directeur
              </option>
              <option
                value="2"
              >
                Coordonnateur
              </option>
              <option
                value="3"
              >
                Adjoint-Coordennateur
              </option>
              <option
                value="4"
              >
                Intervenant
              </option>
            </select>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option>
                  Choisir un rôle
                </option>,
                <option
                  value="1"
                >
                  Directeur
                </option>,
                <option
                  value="2"
                >
                  Coordonnateur
                </option>,
                <option
                  value="3"
                >
                  Adjoint-Coordennateur
                </option>,
                <option
                  value="4"
                >
                  Intervenant
                </option>,
              ],
              "name": "role",
              "onChange": [Function],
              "placeholder": "Choisir un role",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Choisir un rôle",
                },
                "ref": null,
                "rendered": "Choisir un rôle",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Directeur",
                  "value": "1",
                },
                "ref": null,
                "rendered": "Directeur",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Coordonnateur",
                  "value": "2",
                },
                "ref": null,
                "rendered": "Coordonnateur",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Adjoint-Coordennateur",
                  "value": "3",
                },
                "ref": null,
                "rendered": "Adjoint-Coordennateur",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Intervenant",
                  "value": "4",
                },
                "ref": null,
                "rendered": "Intervenant",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": " Enregistrer ",
            "role": "button",
          },
          "ref": null,
          "rendered": " Enregistrer ",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AddEmployeOrgaForm ne crash pas AddEmployeOrgaForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddEmployeOrgaForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero unique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
        " ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero unique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numero unique ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numero unique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom organisme ",
              },
              "ref": null,
              "rendered": " Nom organisme ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
      " ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
          " ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numero unique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom organisme 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numero unique ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numero unique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom organisme ",
                },
                "ref": null,
                "rendered": " Nom organisme ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
        " ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AddNoteForm ne crash pas AddNoteForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddNoteForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <FormField>
          <label>
            Nom de l'intervenant concerné:
            <input
              name="nomIntervenant"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Nom de la personne pour qui cette note est destinée:
            <input
              name="message"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Nom de la personne concerné:
            <input
              name="nomPersonneConcerne"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <Button
          as="button"
          primary={true}
          role="button"
        >
           Enregistrer 
        </Button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom de l'intervenant concerné:
            <input
              name="nomIntervenant"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom de l'intervenant concerné:",
              <input
                name="nomIntervenant"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom de l'intervenant concerné:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "nomIntervenant",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom de la personne pour qui cette note est destinée:
            <input
              name="message"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom de la personne pour qui cette note est destinée:",
              <input
                name="message"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom de la personne pour qui cette note est destinée:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "message",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom de la personne concerné:
            <input
              name="nomPersonneConcerne"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom de la personne concerné:",
              <input
                name="nomPersonneConcerne"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom de la personne concerné:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "nomPersonneConcerne",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": " Enregistrer ",
          "primary": true,
          "role": "button",
        },
        "ref": null,
        "rendered": " Enregistrer ",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <label>
              Nom de l'intervenant concerné:
              <input
                name="nomIntervenant"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Nom de la personne pour qui cette note est destinée:
              <input
                name="message"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Nom de la personne concerné:
              <input
                name="nomPersonneConcerne"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <Button
            as="button"
            primary={true}
            role="button"
          >
             Enregistrer 
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom de l'intervenant concerné:
              <input
                name="nomIntervenant"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom de l'intervenant concerné:",
                <input
                  name="nomIntervenant"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom de l'intervenant concerné:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "nomIntervenant",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom de la personne pour qui cette note est destinée:
              <input
                name="message"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom de la personne pour qui cette note est destinée:",
                <input
                  name="message"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom de la personne pour qui cette note est destinée:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "message",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom de la personne concerné:
              <input
                name="nomPersonneConcerne"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom de la personne concerné:",
                <input
                  name="nomPersonneConcerne"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom de la personne concerné:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "nomPersonneConcerne",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": " Enregistrer ",
            "primary": true,
            "role": "button",
          },
          "ref": null,
          "rendered": " Enregistrer ",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AddOrgaRefForm ne crash pas AddOrgaRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddOrgaRefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <FormField>
          <label>
            Nom de l organisation:
            <input
              name="nom"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Numéro Civique:
            <input
              name="noCivique"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Rue:
            <input
              name="rue"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Ville:
            <input
              name="ville"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Province:
            <input
              name="province"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Code Postal:
            <input
              name="codePostal"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Télephone Bureau:
            <input
              name="telephoneBureau"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Fax:
            <input
              name="fax"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Courriel:
            <input
              name="courriel"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Site Internet:
            <input
              name="siteWeb"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <select
            name="etat"
            onChange={[Function]}
            placeholder="Choisir un etat"
          >
            <option
              selected={true}
            >
               Choisir 
            </option>
            <option
              value="actif"
            >
               Actif 
            </option>
            <option
              value="inactif"
            >
               Inactif 
            </option>
          </select>
        </FormField>,
        <br />,
        <Button
          as="button"
          primary={true}
          role="button"
        >
           Enregistrer 
        </Button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom de l organisation:
            <input
              name="nom"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom de l organisation:",
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom de l organisation:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "nom",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Numéro Civique:
            <input
              name="noCivique"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Numéro Civique:",
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Numéro Civique:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "noCivique",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Rue:
            <input
              name="rue"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Rue:",
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Rue:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "rue",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Ville:
            <input
              name="ville"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Ville:",
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Ville:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "ville",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Province:
            <input
              name="province"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Province:",
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Province:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "province",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Code Postal:
            <input
              name="codePostal"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Code Postal:",
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Code Postal:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "codePostal",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Télephone Bureau:
            <input
              name="telephoneBureau"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Télephone Bureau:",
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Télephone Bureau:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "telephoneBureau",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Fax:
            <input
              name="fax"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Fax:",
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Fax:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fax",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Courriel:
            <input
              name="courriel"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Courriel:",
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Courriel:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "courriel",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Site Internet:
            <input
              name="siteWeb"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Site Internet:",
              <input
                name="siteWeb"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Site Internet:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "siteWeb",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <select
            name="etat"
            onChange={[Function]}
            placeholder="Choisir un etat"
          >
            <option
              selected={true}
            >
               Choisir 
            </option>
            <option
              value="actif"
            >
               Actif 
            </option>
            <option
              value="inactif"
            >
               Inactif 
            </option>
          </select>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                selected={true}
              >
                 Choisir 
              </option>,
              <option
                value="actif"
              >
                 Actif 
              </option>,
              <option
                value="inactif"
              >
                 Inactif 
              </option>,
            ],
            "name": "etat",
            "onChange": [Function],
            "placeholder": "Choisir un etat",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Choisir ",
                "selected": true,
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Actif ",
                "value": "actif",
              },
              "ref": null,
              "rendered": " Actif ",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Inactif ",
                "value": "inactif",
              },
              "ref": null,
              "rendered": " Inactif ",
              "type": "option",
            },
          ],
          "type": "select",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": " Enregistrer ",
          "primary": true,
          "role": "button",
        },
        "ref": null,
        "rendered": " Enregistrer ",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <label>
              Nom de l organisation:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Numéro Civique:
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Rue:
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Ville:
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Province:
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Code Postal:
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Télephone Bureau:
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Fax:
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Courriel:
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Site Internet:
              <input
                name="siteWeb"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <select
              name="etat"
              onChange={[Function]}
              placeholder="Choisir un etat"
            >
              <option
                selected={true}
              >
                 Choisir 
              </option>
              <option
                value="actif"
              >
                 Actif 
              </option>
              <option
                value="inactif"
              >
                 Inactif 
              </option>
            </select>
          </FormField>,
          <br />,
          <Button
            as="button"
            primary={true}
            role="button"
          >
             Enregistrer 
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom de l organisation:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom de l organisation:",
                <input
                  name="nom"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom de l organisation:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "nom",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Numéro Civique:
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Numéro Civique:",
                <input
                  name="noCivique"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Numéro Civique:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "noCivique",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Rue:
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Rue:",
                <input
                  name="rue"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Rue:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "rue",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Ville:
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Ville:",
                <input
                  name="ville"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Ville:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "ville",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Province:
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Province:",
                <input
                  name="province"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Province:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "province",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Code Postal:
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Code Postal:",
                <input
                  name="codePostal"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Code Postal:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "codePostal",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Télephone Bureau:
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Télephone Bureau:",
                <input
                  name="telephoneBureau"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Télephone Bureau:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "telephoneBureau",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Fax:
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Fax:",
                <input
                  name="fax"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Fax:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fax",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Courriel:
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Courriel:",
                <input
                  name="courriel"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Courriel:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "courriel",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Site Internet:
              <input
                name="siteWeb"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Site Internet:",
                <input
                  name="siteWeb"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Site Internet:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "siteWeb",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <select
              name="etat"
              onChange={[Function]}
              placeholder="Choisir un etat"
            >
              <option
                selected={true}
              >
                 Choisir 
              </option>
              <option
                value="actif"
              >
                 Actif 
              </option>
              <option
                value="inactif"
              >
                 Inactif 
              </option>
            </select>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  selected={true}
                >
                   Choisir 
                </option>,
                <option
                  value="actif"
                >
                   Actif 
                </option>,
                <option
                  value="inactif"
                >
                   Inactif 
                </option>,
              ],
              "name": "etat",
              "onChange": [Function],
              "placeholder": "Choisir un etat",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Choisir ",
                  "selected": true,
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Actif ",
                  "value": "actif",
                },
                "ref": null,
                "rendered": " Actif ",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Inactif ",
                  "value": "inactif",
                },
                "ref": null,
                "rendered": " Inactif ",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": " Enregistrer ",
            "primary": true,
            "role": "button",
          },
          "ref": null,
          "rendered": " Enregistrer ",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AddOrganismeForm ne crash pas AddOrganismeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddOrganismeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <FormField>
          <label>
            Nom de l organisation:
            <input
              name="nom"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Numéro Civique:
            <input
              name="noCivique"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Rue:
            <input
              name="rue"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Ville:
            <input
              name="ville"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Province:
            <input
              name="province"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Code Postal:
            <input
              name="codePostal"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Télephone Bureau:
            <input
              name="telephoneBureau"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Fax:
            <input
              name="fax"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Courriel:
            <input
              name="courriel"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <Button
          as="button"
          primary={true}
          role="button"
        >
          Enregistrer
        </Button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom de l organisation:
            <input
              name="nom"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom de l organisation:",
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom de l organisation:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "nom",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Numéro Civique:
            <input
              name="noCivique"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Numéro Civique:",
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Numéro Civique:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "noCivique",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Rue:
            <input
              name="rue"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Rue:",
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Rue:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "rue",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Ville:
            <input
              name="ville"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Ville:",
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Ville:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "ville",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Province:
            <input
              name="province"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Province:",
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Province:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "province",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Code Postal:
            <input
              name="codePostal"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Code Postal:",
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Code Postal:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "codePostal",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Télephone Bureau:
            <input
              name="telephoneBureau"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Télephone Bureau:",
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Télephone Bureau:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "telephoneBureau",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Fax:
            <input
              name="fax"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Fax:",
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Fax:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fax",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Courriel:
            <input
              name="courriel"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Courriel:",
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Courriel:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "courriel",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": "Enregistrer",
          "primary": true,
          "role": "button",
        },
        "ref": null,
        "rendered": "Enregistrer",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <label>
              Nom de l organisation:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Numéro Civique:
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Rue:
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Ville:
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Province:
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Code Postal:
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Télephone Bureau:
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Fax:
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Courriel:
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <Button
            as="button"
            primary={true}
            role="button"
          >
            Enregistrer
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom de l organisation:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom de l organisation:",
                <input
                  name="nom"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom de l organisation:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "nom",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Numéro Civique:
              <input
                name="noCivique"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Numéro Civique:",
                <input
                  name="noCivique"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Numéro Civique:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "noCivique",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Rue:
              <input
                name="rue"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Rue:",
                <input
                  name="rue"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Rue:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "rue",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Ville:
              <input
                name="ville"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Ville:",
                <input
                  name="ville"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Ville:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "ville",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Province:
              <input
                name="province"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Province:",
                <input
                  name="province"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Province:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "province",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Code Postal:
              <input
                name="codePostal"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Code Postal:",
                <input
                  name="codePostal"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Code Postal:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "codePostal",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Télephone Bureau:
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Télephone Bureau:",
                <input
                  name="telephoneBureau"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Télephone Bureau:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "telephoneBureau",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Fax:
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Fax:",
                <input
                  name="fax"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Fax:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fax",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Courriel:
              <input
                name="courriel"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Courriel:",
                <input
                  name="courriel"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Courriel:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "courriel",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Enregistrer",
            "primary": true,
            "role": "button",
          },
          "ref": null,
          "rendered": "Enregistrer",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AddRefForm ne crash pas AddRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <FormField>
          <label>
            Nom du référent:
            <input
              name="nom"
              onChange={[Function]}
              type="text"
            />
             
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Prenom du référent:
            <input
              name="prenom"
              onChange={[Function]}
              type="text"
            />
             
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Le titre du référent:
            <input
              name="titre"
              onChange={[Function]}
              type="text"
            />
             
          </label>
           
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Le telephone cellulaire du référent:
            <input
              name="telephoneCell"
              onChange={[Function]}
              type="text"
            />
             
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Le telephone de bureau du référent:
            <input
              name="telephoneBureau"
              onChange={[Function]}
              type="text"
            />
             
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Le email du référent:
            <input
              name="email"
              onChange={[Function]}
              type="text"
            />
             
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <label>
            Le fax du référent:
            <input
              name="fax"
              onChange={[Function]}
              type="text"
            />
             
          </label>
        </FormField>,
        " ",
        <br />,
        <FormField>
          <select
            name="preferenceReception"
            onChange={[Function]}
            placeholder="Choisir une préférence"
          >
            <option
              selected={true}
            >
               Choisir 
            </option>
            <option
              value="1"
            >
               Fax 
            </option>
            <option
              value="2"
            >
               Email 
            </option>
            <option
              value="3"
            >
               Papier 
            </option>
          </select>
           
        </FormField>,
        " ",
        <br />,
        <Button
          as="button"
          primary={true}
          role="button"
        >
           Enregistrer 
        </Button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom du référent:
            <input
              name="nom"
              onChange={[Function]}
              type="text"
            />
             
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom du référent:",
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom du référent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "nom",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Prenom du référent:
            <input
              name="prenom"
              onChange={[Function]}
              type="text"
            />
             
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Prenom du référent:",
              <input
                name="prenom"
                onChange={[Function]}
                type="text"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Prenom du référent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "prenom",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label>
              Le titre du référent:
              <input
                name="titre"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Le titre du référent:",
                <input
                  name="titre"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Le titre du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "titre",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          " ",
        ],
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Le telephone cellulaire du référent:
            <input
              name="telephoneCell"
              onChange={[Function]}
              type="text"
            />
             
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Le telephone cellulaire du référent:",
              <input
                name="telephoneCell"
                onChange={[Function]}
                type="text"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Le telephone cellulaire du référent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "telephoneCell",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Le telephone de bureau du référent:
            <input
              name="telephoneBureau"
              onChange={[Function]}
              type="text"
            />
             
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Le telephone de bureau du référent:",
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Le telephone de bureau du référent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "telephoneBureau",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Le email du référent:
            <input
              name="email"
              onChange={[Function]}
              type="text"
            />
             
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Le email du référent:",
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Le email du référent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Le fax du référent:
            <input
              name="fax"
              onChange={[Function]}
              type="text"
            />
             
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Le fax du référent:",
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Le fax du référent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "fax",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            " ",
          ],
          "type": "label",
        },
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <select
              name="preferenceReception"
              onChange={[Function]}
              placeholder="Choisir une préférence"
            >
              <option
                selected={true}
              >
                 Choisir 
              </option>
              <option
                value="1"
              >
                 Fax 
              </option>
              <option
                value="2"
              >
                 Email 
              </option>
              <option
                value="3"
              >
                 Papier 
              </option>
            </select>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  selected={true}
                >
                   Choisir 
                </option>,
                <option
                  value="1"
                >
                   Fax 
                </option>,
                <option
                  value="2"
                >
                   Email 
                </option>,
                <option
                  value="3"
                >
                   Papier 
                </option>,
              ],
              "name": "preferenceReception",
              "onChange": [Function],
              "placeholder": "Choisir une préférence",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Choisir ",
                  "selected": true,
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Fax ",
                  "value": "1",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Email ",
                  "value": "2",
                },
                "ref": null,
                "rendered": " Email ",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Papier ",
                  "value": "3",
                },
                "ref": null,
                "rendered": " Papier ",
                "type": "option",
              },
            ],
            "type": "select",
          },
          " ",
        ],
        "type": [Function],
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": " Enregistrer ",
          "primary": true,
          "role": "button",
        },
        "ref": null,
        "rendered": " Enregistrer ",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <label>
              Nom du référent:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
               
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Prenom du référent:
              <input
                name="prenom"
                onChange={[Function]}
                type="text"
              />
               
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Le titre du référent:
              <input
                name="titre"
                onChange={[Function]}
                type="text"
              />
               
            </label>
             
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Le telephone cellulaire du référent:
              <input
                name="telephoneCell"
                onChange={[Function]}
                type="text"
              />
               
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Le telephone de bureau du référent:
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />
               
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Le email du référent:
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
               
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <label>
              Le fax du référent:
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />
               
            </label>
          </FormField>,
          " ",
          <br />,
          <FormField>
            <select
              name="preferenceReception"
              onChange={[Function]}
              placeholder="Choisir une préférence"
            >
              <option
                selected={true}
              >
                 Choisir 
              </option>
              <option
                value="1"
              >
                 Fax 
              </option>
              <option
                value="2"
              >
                 Email 
              </option>
              <option
                value="3"
              >
                 Papier 
              </option>
            </select>
             
          </FormField>,
          " ",
          <br />,
          <Button
            as="button"
            primary={true}
            role="button"
          >
             Enregistrer 
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom du référent:
              <input
                name="nom"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom du référent:",
                <input
                  name="nom"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "nom",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Prenom du référent:
              <input
                name="prenom"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Prenom du référent:",
                <input
                  name="prenom"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Prenom du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "prenom",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label>
                Le titre du référent:
                <input
                  name="titre"
                  onChange={[Function]}
                  type="text"
                />
                 
              </label>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Le titre du référent:",
                  <input
                    name="titre"
                    onChange={[Function]}
                    type="text"
                  />,
                  " ",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Le titre du référent:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "titre",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                " ",
              ],
              "type": "label",
            },
            " ",
          ],
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Le telephone cellulaire du référent:
              <input
                name="telephoneCell"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Le telephone cellulaire du référent:",
                <input
                  name="telephoneCell"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Le telephone cellulaire du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "telephoneCell",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Le telephone de bureau du référent:
              <input
                name="telephoneBureau"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Le telephone de bureau du référent:",
                <input
                  name="telephoneBureau"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Le telephone de bureau du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "telephoneBureau",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Le email du référent:
              <input
                name="email"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Le email du référent:",
                <input
                  name="email"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Le email du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "email",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Le fax du référent:
              <input
                name="fax"
                onChange={[Function]}
                type="text"
              />
               
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Le fax du référent:",
                <input
                  name="fax"
                  onChange={[Function]}
                  type="text"
                />,
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Le fax du référent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "fax",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              " ",
            ],
            "type": "label",
          },
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <select
                name="preferenceReception"
                onChange={[Function]}
                placeholder="Choisir une préférence"
              >
                <option
                  selected={true}
                >
                   Choisir 
                </option>
                <option
                  value="1"
                >
                   Fax 
                </option>
                <option
                  value="2"
                >
                   Email 
                </option>
                <option
                  value="3"
                >
                   Papier 
                </option>
              </select>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    selected={true}
                  >
                     Choisir 
                  </option>,
                  <option
                    value="1"
                  >
                     Fax 
                  </option>,
                  <option
                    value="2"
                  >
                     Email 
                  </option>,
                  <option
                    value="3"
                  >
                     Papier 
                  </option>,
                ],
                "name": "preferenceReception",
                "onChange": [Function],
                "placeholder": "Choisir une préférence",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Choisir ",
                    "selected": true,
                  },
                  "ref": null,
                  "rendered": " Choisir ",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Fax ",
                    "value": "1",
                  },
                  "ref": null,
                  "rendered": " Fax ",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Email ",
                    "value": "2",
                  },
                  "ref": null,
                  "rendered": " Email ",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Papier ",
                    "value": "3",
                  },
                  "ref": null,
                  "rendered": " Papier ",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            " ",
          ],
          "type": [Function],
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": " Enregistrer ",
            "primary": true,
            "role": "button",
          },
          "ref": null,
          "rendered": " Enregistrer ",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`AddServiceForm ne crash pas AddServiceForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddServiceForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        <FormField>
          <label>
            Nom du service:
            <input
              name="nomService"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Tarification du parent:
            <input
              name="tarificationParent"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Tarification subventionnée:
            <input
              name="tarificationSubventionnee"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <label>
            Tarification pour le CISSS:
            <input
              name="tarificationCiss"
              onChange={[Function]}
              type="text"
            />
          </label>
        </FormField>,
        <br />,
        <FormField>
          <select
            name="etatDuService"
            onChange={[Function]}
            placeholder="Choisir un état"
          >
            <option>
              Choisir un état
            </option>
            <option
              value="actif"
            >
              Actif
            </option>
            <option
              value="inactif"
            >
              Inactif
            </option>
          </select>
        </FormField>,
        <br />,
        <Button
          as="button"
          primary={true}
          role="button"
        >
          Enregistrer
        </Button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Nom du service:
            <input
              name="nomService"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Nom du service:",
              <input
                name="nomService"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Nom du service:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "nomService",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Tarification du parent:
            <input
              name="tarificationParent"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Tarification du parent:",
              <input
                name="tarificationParent"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Tarification du parent:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "tarificationParent",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Tarification subventionnée:
            <input
              name="tarificationSubventionnee"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Tarification subventionnée:",
              <input
                name="tarificationSubventionnee"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Tarification subventionnée:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "tarificationSubventionnee",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <label>
            Tarification pour le CISSS:
            <input
              name="tarificationCiss"
              onChange={[Function]}
              type="text"
            />
          </label>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Tarification pour le CISSS:",
              <input
                name="tarificationCiss"
                onChange={[Function]}
                type="text"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Tarification pour le CISSS:",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "tarificationCiss",
                "onChange": [Function],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "label",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <select
            name="etatDuService"
            onChange={[Function]}
            placeholder="Choisir un état"
          >
            <option>
              Choisir un état
            </option>
            <option
              value="actif"
            >
              Actif
            </option>
            <option
              value="inactif"
            >
              Inactif
            </option>
          </select>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option>
                Choisir un état
              </option>,
              <option
                value="actif"
              >
                Actif
              </option>,
              <option
                value="inactif"
              >
                Inactif
              </option>,
            ],
            "name": "etatDuService",
            "onChange": [Function],
            "placeholder": "Choisir un état",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Choisir un état",
              },
              "ref": null,
              "rendered": "Choisir un état",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Actif",
                "value": "actif",
              },
              "ref": null,
              "rendered": "Actif",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Inactif",
                "value": "inactif",
              },
              "ref": null,
              "rendered": "Inactif",
              "type": "option",
            },
          ],
          "type": "select",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": "Enregistrer",
          "primary": true,
          "role": "button",
        },
        "ref": null,
        "rendered": "Enregistrer",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          <FormField>
            <label>
              Nom du service:
              <input
                name="nomService"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Tarification du parent:
              <input
                name="tarificationParent"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Tarification subventionnée:
              <input
                name="tarificationSubventionnee"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <label>
              Tarification pour le CISSS:
              <input
                name="tarificationCiss"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>,
          <br />,
          <FormField>
            <select
              name="etatDuService"
              onChange={[Function]}
              placeholder="Choisir un état"
            >
              <option>
                Choisir un état
              </option>
              <option
                value="actif"
              >
                Actif
              </option>
              <option
                value="inactif"
              >
                Inactif
              </option>
            </select>
          </FormField>,
          <br />,
          <Button
            as="button"
            primary={true}
            role="button"
          >
            Enregistrer
          </Button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Nom du service:
              <input
                name="nomService"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Nom du service:",
                <input
                  name="nomService"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Nom du service:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "nomService",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Tarification du parent:
              <input
                name="tarificationParent"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Tarification du parent:",
                <input
                  name="tarificationParent"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Tarification du parent:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "tarificationParent",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Tarification subventionnée:
              <input
                name="tarificationSubventionnee"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Tarification subventionnée:",
                <input
                  name="tarificationSubventionnee"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Tarification subventionnée:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "tarificationSubventionnee",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <label>
              Tarification pour le CISSS:
              <input
                name="tarificationCiss"
                onChange={[Function]}
                type="text"
              />
            </label>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Tarification pour le CISSS:",
                <input
                  name="tarificationCiss"
                  onChange={[Function]}
                  type="text"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Tarification pour le CISSS:",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "tarificationCiss",
                  "onChange": [Function],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <select
              name="etatDuService"
              onChange={[Function]}
              placeholder="Choisir un état"
            >
              <option>
                Choisir un état
              </option>
              <option
                value="actif"
              >
                Actif
              </option>
              <option
                value="inactif"
              >
                Inactif
              </option>
            </select>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option>
                  Choisir un état
                </option>,
                <option
                  value="actif"
                >
                  Actif
                </option>,
                <option
                  value="inactif"
                >
                  Inactif
                </option>,
              ],
              "name": "etatDuService",
              "onChange": [Function],
              "placeholder": "Choisir un état",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Choisir un état",
                },
                "ref": null,
                "rendered": "Choisir un état",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Actif",
                  "value": "actif",
                },
                "ref": null,
                "rendered": "Actif",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Inactif",
                  "value": "inactif",
                },
                "ref": null,
                "rendered": "Inactif",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Enregistrer",
            "primary": true,
            "role": "button",
          },
          "ref": null,
          "rendered": "Enregistrer",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DelEmployeForm ne crash pas DelEmployeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DelEmployeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro employe 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prenom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Mot de passe 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Role 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
        </TableBody>,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro employe 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prenom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Mot de passe 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Role 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro employe 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Prenom 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Telephone 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Mot de passe 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Role 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro employe ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numéro employe ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom ",
              },
              "ref": null,
              "rendered": " Nom ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Prenom ",
              },
              "ref": null,
              "rendered": " Prenom ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Telephone ",
              },
              "ref": null,
              "rendered": " Telephone ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Mot de passe ",
              },
              "ref": null,
              "rendered": " Mot de passe ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Role ",
              },
              "ref": null,
              "rendered": " Role ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro employe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prenom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Mot de passe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Role 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
          </TableBody>,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro employe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prenom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Mot de passe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Role 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro employe 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Prenom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Mot de passe 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Role 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro employe ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numéro employe ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Prenom ",
                },
                "ref": null,
                "rendered": " Prenom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone ",
                },
                "ref": null,
                "rendered": " Telephone ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Mot de passe ",
                },
                "ref": null,
                "rendered": " Mot de passe ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Role ",
                },
                "ref": null,
                "rendered": " Role ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DelNoteForm ne crash pas DelNoteForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DelNoteForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero de note 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom de l'intervenant 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numero de famille 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Message 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom de la personne concerné 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Date 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero de note 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom de l'intervenant 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numero de famille 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Message 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom de la personne concerné 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Date 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero de note 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom de l'intervenant 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numero de famille 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Message 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom de la personne concerné 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Date 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numero de note ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numero de note ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom de l'intervenant ",
              },
              "ref": null,
              "rendered": " Nom de l'intervenant ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numero de famille ",
              },
              "ref": null,
              "rendered": " Numero de famille ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Message ",
              },
              "ref": null,
              "rendered": " Message ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom de la personne concerné ",
              },
              "ref": null,
              "rendered": " Nom de la personne concerné ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Date ",
              },
              "ref": null,
              "rendered": " Date ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero de note 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de l'intervenant 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numero de famille 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Message 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de la personne concerné 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Date 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero de note 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de l'intervenant 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numero de famille 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Message 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de la personne concerné 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Date 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numero de note 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom de l'intervenant 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numero de famille 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Message 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom de la personne concerné 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Date 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numero de note ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numero de note ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom de l'intervenant ",
                },
                "ref": null,
                "rendered": " Nom de l'intervenant ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numero de famille ",
                },
                "ref": null,
                "rendered": " Numero de famille ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Message ",
                },
                "ref": null,
                "rendered": " Message ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom de la personne concerné ",
                },
                "ref": null,
                "rendered": " Nom de la personne concerné ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Date ",
                },
                "ref": null,
                "rendered": " Date ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DelOrganismeForm ne crash pas DelOrganismeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DelOrganismeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
        " ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Nom 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Nom ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom organisme ",
              },
              "ref": null,
              "rendered": " Nom organisme ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
      " ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
          " ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom organisme 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom organisme ",
                },
                "ref": null,
                "rendered": " Nom organisme ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
        " ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DelRefForm ne crash pas DelRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DelRefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro referent 
            </TableHeaderCell>
             
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prénom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Titre 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone cellulaire 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone de bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Préférence 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Email 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
        </TableBody>,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro referent 
            </TableHeaderCell>
             
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prénom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Titre 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone cellulaire 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone de bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Préférence 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Email 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>,
              " ",
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro referent ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numéro referent ",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom ",
              },
              "ref": null,
              "rendered": " Nom ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Prénom ",
              },
              "ref": null,
              "rendered": " Prénom ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Titre ",
              },
              "ref": null,
              "rendered": " Titre ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Telephone cellulaire ",
              },
              "ref": null,
              "rendered": " Telephone cellulaire ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Telephone de bureau ",
              },
              "ref": null,
              "rendered": " Telephone de bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Préférence ",
              },
              "ref": null,
              "rendered": " Préférence ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Email ",
              },
              "ref": null,
              "rendered": " Email ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>
               
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
          </TableBody>,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>
               
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro referent 
                </TableHeaderCell>,
                " ",
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Titre 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone cellulaire 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone de bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Préférence 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Email 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro referent ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numéro referent ",
                "type": [Function],
              },
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Prénom ",
                },
                "ref": null,
                "rendered": " Prénom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Titre ",
                },
                "ref": null,
                "rendered": " Titre ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone cellulaire ",
                },
                "ref": null,
                "rendered": " Telephone cellulaire ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone de bureau ",
                },
                "ref": null,
                "rendered": " Telephone de bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Préférence ",
                },
                "ref": null,
                "rendered": " Préférence ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Email ",
                },
                "ref": null,
                "rendered": " Email ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`DesactiverOrganismeRefForm ne crash pas DesactiverOrganismeRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DesactiverOrganismeRefFrom />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Site Web 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Etat 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Site Web 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Etat 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numero ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numero ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom organisme réferent ",
              },
              "ref": null,
              "rendered": " Nom organisme réferent ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Site Web ",
              },
              "ref": null,
              "rendered": " Site Web ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Etat ",
              },
              "ref": null,
              "rendered": " Etat ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numero 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom organisme réferent 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Site Web 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Etat 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numero ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numero ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom organisme réferent ",
                },
                "ref": null,
                "rendered": " Nom organisme réferent ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Site Web ",
                },
                "ref": null,
                "rendered": " Site Web ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Etat ",
                },
                "ref": null,
                "rendered": " Etat ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`EmployeForm ne crash pas EmployeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EmployeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              #
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Prenom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Courriel
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Mot de passe
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Role
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              #
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Prenom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Courriel
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Mot de passe
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Role
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Prenom
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Mot de passe
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Role
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "#",
                "singleLine": true,
              },
              "ref": null,
              "rendered": "#",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Nom",
              },
              "ref": null,
              "rendered": "Nom",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Prenom",
              },
              "ref": null,
              "rendered": "Prenom",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Courriel",
              },
              "ref": null,
              "rendered": "Courriel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Mot de passe",
              },
              "ref": null,
              "rendered": "Mot de passe",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Role",
              },
              "ref": null,
              "rendered": "Role",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Prenom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Mot de passe
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Role
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Prenom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Mot de passe
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Role
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  #
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Prenom
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Courriel
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Mot de passe
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Role
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "#",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": "#",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Nom",
                },
                "ref": null,
                "rendered": "Nom",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Prenom",
                },
                "ref": null,
                "rendered": "Prenom",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Courriel",
                },
                "ref": null,
                "rendered": "Courriel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Mot de passe",
                },
                "ref": null,
                "rendered": "Mot de passe",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Role",
                },
                "ref": null,
                "rendered": "Role",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`LoginForm ne crash pas LoginForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "as": "form",
      "children": Array [
        undefined,
        <FormField
          error={false}
        >
          <label
            htmlFor="prenom"
          >
            Prenom
          </label>
          <input
            id="prenom"
            name="prenom"
            onChange={[Function]}
            type="text"
            value=""
          />
        </FormField>,
        <FormField
          error={false}
        >
          <label
            htmlFor="password"
          >
            Mot de passe
          </label>
          <input
            id="password"
            name="password"
            onChange={[Function]}
            type="password"
            value=""
          />
        </FormField>,
        <Button
          as="button"
          primary={true}
          role="button"
        >
          Login
        </Button>,
      ],
      "loading": false,
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              htmlFor="prenom"
            >
              Prenom
            </label>,
            <input
              id="prenom"
              name="prenom"
              onChange={[Function]}
              type="text"
              value=""
            />,
            undefined,
          ],
          "error": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Prenom",
              "htmlFor": "prenom",
            },
            "ref": null,
            "rendered": "Prenom",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "prenom",
              "name": "prenom",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          undefined,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              htmlFor="password"
            >
              Mot de passe
            </label>,
            <input
              id="password"
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />,
            undefined,
          ],
          "error": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mot de passe",
              "htmlFor": "password",
            },
            "ref": null,
            "rendered": "Mot de passe",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "password",
              "name": "password",
              "onChange": [Function],
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          undefined,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": "Login",
          "primary": true,
          "role": "button",
        },
        "ref": null,
        "rendered": "Login",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "as": "form",
        "children": Array [
          undefined,
          <FormField
            error={false}
          >
            <label
              htmlFor="prenom"
            >
              Prenom
            </label>
            <input
              id="prenom"
              name="prenom"
              onChange={[Function]}
              type="text"
              value=""
            />
          </FormField>,
          <FormField
            error={false}
          >
            <label
              htmlFor="password"
            >
              Mot de passe
            </label>
            <input
              id="password"
              name="password"
              onChange={[Function]}
              type="password"
              value=""
            />
          </FormField>,
          <Button
            as="button"
            primary={true}
            role="button"
          >
            Login
          </Button>,
        ],
        "loading": false,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                htmlFor="prenom"
              >
                Prenom
              </label>,
              <input
                id="prenom"
                name="prenom"
                onChange={[Function]}
                type="text"
                value=""
              />,
              undefined,
            ],
            "error": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Prenom",
                "htmlFor": "prenom",
              },
              "ref": null,
              "rendered": "Prenom",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "prenom",
                "name": "prenom",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            undefined,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                htmlFor="password"
              >
                Mot de passe
              </label>,
              <input
                id="password"
                name="password"
                onChange={[Function]}
                type="password"
                value=""
              />,
              undefined,
            ],
            "error": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mot de passe",
                "htmlFor": "password",
              },
              "ref": null,
              "rendered": "Mot de passe",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "password",
                "name": "password",
                "onChange": [Function],
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            undefined,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Login",
            "primary": true,
            "role": "button",
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`NoteForm ne crash pas NoteForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NoteForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              Numéro de note
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom de l'intervenant
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              numero de famille
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              message
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              nom de la personne concerné
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              date
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              Numéro de note
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom de l'intervenant
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              numero de famille
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              message
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              nom de la personne concerné
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              date
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro de note
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Nom de l'intervenant
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                numero de famille
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                message
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                nom de la personne concerné
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                date
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Numéro de note",
                "singleLine": true,
              },
              "ref": null,
              "rendered": "Numéro de note",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Nom de l'intervenant",
              },
              "ref": null,
              "rendered": "Nom de l'intervenant",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "numero de famille",
              },
              "ref": null,
              "rendered": "numero de famille",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "message",
              },
              "ref": null,
              "rendered": "message",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "nom de la personne concerné",
              },
              "ref": null,
              "rendered": "nom de la personne concerné",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "date",
              },
              "ref": null,
              "rendered": "date",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro de note
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom de l'intervenant
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                numero de famille
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                message
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                nom de la personne concerné
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                date
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro de note
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom de l'intervenant
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                numero de famille
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                message
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                nom de la personne concerné
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                date
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  Numéro de note
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Nom de l'intervenant
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  numero de famille
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  message
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  nom de la personne concerné
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  date
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Numéro de note",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": "Numéro de note",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Nom de l'intervenant",
                },
                "ref": null,
                "rendered": "Nom de l'intervenant",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "numero de famille",
                },
                "ref": null,
                "rendered": "numero de famille",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "message",
                },
                "ref": null,
                "rendered": "message",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "nom de la personne concerné",
                },
                "ref": null,
                "rendered": "nom de la personne concerné",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "date",
                },
                "ref": null,
                "rendered": "date",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Orga Ref Renders without crashing Orga Ref Renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrgaRefSelectionForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero unique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Site Web 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Etat 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
        " ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero unique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Site Web 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Etat 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numero unique ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numero unique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom organisme réferent ",
              },
              "ref": null,
              "rendered": " Nom organisme réferent ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Site Web ",
              },
              "ref": null,
              "rendered": " Site Web ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Etat ",
              },
              "ref": null,
              "rendered": " Etat ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
      " ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
          " ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numero unique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom organisme réferent 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Site Web 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Etat 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numero unique ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numero unique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom organisme réferent ",
                },
                "ref": null,
                "rendered": " Nom organisme réferent ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Site Web ",
                },
                "ref": null,
                "rendered": " Site Web ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Etat ",
                },
                "ref": null,
                "rendered": " Etat ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
        " ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`OrgaRefForm ne crash pas OrgaRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrgaRefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              #
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Numéro Civique
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Rue
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Ville
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Province
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Code Postal
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Télephone Bureau
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Fax
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Courriel
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Site Web
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Etat
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              #
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Numéro Civique
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Rue
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Ville
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Province
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Code Postal
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Télephone Bureau
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Fax
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Courriel
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Site Web
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Etat
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Numéro Civique
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Rue
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Ville
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Province
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Code Postal
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Télephone Bureau
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Site Web
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Etat
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "#",
                "singleLine": true,
              },
              "ref": null,
              "rendered": "#",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Nom",
              },
              "ref": null,
              "rendered": "Nom",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Numéro Civique",
              },
              "ref": null,
              "rendered": "Numéro Civique",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Rue",
              },
              "ref": null,
              "rendered": "Rue",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Ville",
              },
              "ref": null,
              "rendered": "Ville",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Province",
              },
              "ref": null,
              "rendered": "Province",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Code Postal",
              },
              "ref": null,
              "rendered": "Code Postal",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Télephone Bureau",
              },
              "ref": null,
              "rendered": "Télephone Bureau",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Fax",
              },
              "ref": null,
              "rendered": "Fax",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Courriel",
              },
              "ref": null,
              "rendered": "Courriel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Site Web",
              },
              "ref": null,
              "rendered": "Site Web",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Etat",
              },
              "ref": null,
              "rendered": "Etat",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Numéro Civique
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Rue
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Ville
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Province
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Code Postal
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Télephone Bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Site Web
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Etat
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Numéro Civique
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Rue
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Ville
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Province
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Code Postal
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Télephone Bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Site Web
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Etat
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  #
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Numéro Civique
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Rue
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Ville
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Province
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Code Postal
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Télephone Bureau
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Courriel
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Site Web
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Etat
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "#",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": "#",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Nom",
                },
                "ref": null,
                "rendered": "Nom",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Numéro Civique",
                },
                "ref": null,
                "rendered": "Numéro Civique",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Rue",
                },
                "ref": null,
                "rendered": "Rue",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Ville",
                },
                "ref": null,
                "rendered": "Ville",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Province",
                },
                "ref": null,
                "rendered": "Province",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Code Postal",
                },
                "ref": null,
                "rendered": "Code Postal",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Télephone Bureau",
                },
                "ref": null,
                "rendered": "Télephone Bureau",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Fax",
                },
                "ref": null,
                "rendered": "Fax",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Courriel",
                },
                "ref": null,
                "rendered": "Courriel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Site Web",
                },
                "ref": null,
                "rendered": "Site Web",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Etat",
                },
                "ref": null,
                "rendered": "Etat",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`OrganismeForm ne crash pas OrganismeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrganismeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <Table
          as="table"
          celled={true}
          padded={true}
        >
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom organisme
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Télephone Bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Courriel
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Options
              </TableHeaderCell>
            </TableRow>
          </TableHeader>
          <TableBody
            as="tbody"
          />
        </Table>,
      ],
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "table",
          "celled": true,
          "children": Array [
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom organisme
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Télephone Bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Courriel
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Options
                </TableHeaderCell>
              </TableRow>
            </TableHeader>,
            <TableBody
              as="tbody"
            />,
          ],
          "padded": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "thead",
              "children": <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom organisme
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Télephone Bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Courriel
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Options
                </TableHeaderCell>
              </TableRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                    Nom
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Nom organisme
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Télephone Bureau
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Courriel
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Options
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Nom",
                    "singleLine": true,
                  },
                  "ref": null,
                  "rendered": "Nom",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Nom organisme",
                  },
                  "ref": null,
                  "rendered": "Nom organisme",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Télephone Bureau",
                  },
                  "ref": null,
                  "rendered": "Télephone Bureau",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Fax",
                  },
                  "ref": null,
                  "rendered": "Fax",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Courriel",
                  },
                  "ref": null,
                  "rendered": "Courriel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Options",
                  },
                  "ref": null,
                  "rendered": "Options",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tbody",
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <Table
            as="table"
            celled={true}
            padded={true}
          >
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom organisme
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Télephone Bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Courriel
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Options
                </TableHeaderCell>
              </TableRow>
            </TableHeader>
            <TableBody
              as="tbody"
            />
          </Table>,
        ],
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "table",
            "celled": true,
            "children": Array [
              <TableHeader
                as="thead"
              >
                <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                    Nom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Nom organisme
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Télephone Bureau
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Courriel
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Options
                  </TableHeaderCell>
                </TableRow>
              </TableHeader>,
              <TableBody
                as="tbody"
              />,
            ],
            "padded": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "thead",
                "children": <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                    Nom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Nom organisme
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Télephone Bureau
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Courriel
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Options
                  </TableHeaderCell>
                </TableRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "tr",
                  "cellAs": "td",
                  "children": Array [
                    <TableHeaderCell
                      as="th"
                      singleLine={true}
                    >
                      Nom
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Nom organisme
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Télephone Bureau
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Fax
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Courriel
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Options
                    </TableHeaderCell>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Nom",
                      "singleLine": true,
                    },
                    "ref": null,
                    "rendered": "Nom",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Nom organisme",
                    },
                    "ref": null,
                    "rendered": "Nom organisme",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Télephone Bureau",
                    },
                    "ref": null,
                    "rendered": "Télephone Bureau",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Fax",
                    },
                    "ref": null,
                    "rendered": "Fax",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Courriel",
                    },
                    "ref": null,
                    "rendered": "Courriel",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Options",
                    },
                    "ref": null,
                    "rendered": "Options",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tbody",
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`PointServiceSelectionForm ne crash pas PointServiceSelectionForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PointServiceSelectionForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero unique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom du point de service réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
        </TableBody>,
        " ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numero unique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom du point de service réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom du point de service réferent 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numero unique ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Numero unique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom du point de service réferent ",
              },
              "ref": null,
              "rendered": " Nom du point de service réferent ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
        ],
        "type": [Function],
      },
      " ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom du point de service réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
          </TableBody>,
          " ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numero unique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom du point de service réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numero unique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom du point de service réferent 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numero unique ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numero unique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom du point de service réferent ",
                },
                "ref": null,
                "rendered": " Nom du point de service réferent ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
          ],
          "type": [Function],
        },
        " ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Recherche Referent Renders without crashing Recherche Referent Renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RechercheReferent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Form
          as="form"
          onSubmit={[Function]}
        >
          <h2>
            Rercherche d'un référent
          </h2>
          <FormField>
            <label>
              Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
              <br />
              <input
                name="recherche"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <Button
            as="button"
            primary={true}
            role="button"
          >
            Rechercher
          </Button>
        </Form>,
        <Table
          as="table"
          celled={true}
          padded={true}
        >
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                Numéro de référent
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Prénom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Titre
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Téléphone cellulaire
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Téléphone bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Préférence réception
              </TableHeaderCell>
            </TableRow>
          </TableHeader>
          <TableBody
            as="tbody"
          />
        </Table>,
      ],
      "className": "rechercheReferent",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": Array [
            <h2>
              Rercherche d'un référent
            </h2>,
            <FormField>
              <label>
                Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <Button
              as="button"
              primary={true}
              role="button"
            >
              Rechercher
            </Button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Rercherche d'un référent",
            },
            "ref": null,
            "rendered": "Rercherche d'un référent",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                  <br />,
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "recherche",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Rechercher",
              "primary": true,
              "role": "button",
            },
            "ref": null,
            "rendered": "Rechercher",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "table",
          "celled": true,
          "children": Array [
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                  Numéro de référent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone cellulaire
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Préférence réception
                </TableHeaderCell>
              </TableRow>
            </TableHeader>,
            <TableBody
              as="tbody"
            />,
          ],
          "padded": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "thead",
              "children": <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                  Numéro de référent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone cellulaire
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Préférence réception
                </TableHeaderCell>
              </TableRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                  >
                    Numéro de référent
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Nom
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Prénom
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Titre
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone cellulaire
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone bureau
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Préférence réception
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Numéro de référent",
                  },
                  "ref": null,
                  "rendered": "Numéro de référent",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Nom",
                  },
                  "ref": null,
                  "rendered": "Nom",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Prénom",
                  },
                  "ref": null,
                  "rendered": "Prénom",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Titre",
                  },
                  "ref": null,
                  "rendered": "Titre",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Téléphone cellulaire",
                  },
                  "ref": null,
                  "rendered": "Téléphone cellulaire",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Téléphone bureau",
                  },
                  "ref": null,
                  "rendered": "Téléphone bureau",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Fax",
                  },
                  "ref": null,
                  "rendered": "Fax",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Préférence réception",
                  },
                  "ref": null,
                  "rendered": "Préférence réception",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tbody",
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Form
            as="form"
            onSubmit={[Function]}
          >
            <h2>
              Rercherche d'un référent
            </h2>
            <FormField>
              <label>
                Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <Button
              as="button"
              primary={true}
              role="button"
            >
              Rechercher
            </Button>
          </Form>,
          <Table
            as="table"
            celled={true}
            padded={true}
          >
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                  Numéro de référent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone cellulaire
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Préférence réception
                </TableHeaderCell>
              </TableRow>
            </TableHeader>
            <TableBody
              as="tbody"
            />
          </Table>,
        ],
        "className": "rechercheReferent",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <h2>
                Rercherche d'un référent
              </h2>,
              <FormField>
                <label>
                  Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                  <br />
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <Button
                as="button"
                primary={true}
                role="button"
              >
                Rechercher
              </Button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Rercherche d'un référent",
              },
              "ref": null,
              "rendered": "Rercherche d'un référent",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                  <br />
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                    <br />,
                    <input
                      name="recherche"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "recherche",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": "Rechercher",
                "primary": true,
                "role": "button",
              },
              "ref": null,
              "rendered": "Rechercher",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "table",
            "celled": true,
            "children": Array [
              <TableHeader
                as="thead"
              >
                <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                  >
                    Numéro de référent
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Nom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Prénom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Titre
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone cellulaire
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone bureau
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Préférence réception
                  </TableHeaderCell>
                </TableRow>
              </TableHeader>,
              <TableBody
                as="tbody"
              />,
            ],
            "padded": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "thead",
                "children": <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                  >
                    Numéro de référent
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Nom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Prénom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Titre
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone cellulaire
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone bureau
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Préférence réception
                  </TableHeaderCell>
                </TableRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "tr",
                  "cellAs": "td",
                  "children": Array [
                    <TableHeaderCell
                      as="th"
                    >
                      Numéro de référent
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Nom
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Prénom
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Titre
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Téléphone cellulaire
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Téléphone bureau
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Fax
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Préférence réception
                    </TableHeaderCell>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Numéro de référent",
                    },
                    "ref": null,
                    "rendered": "Numéro de référent",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Nom",
                    },
                    "ref": null,
                    "rendered": "Nom",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Prénom",
                    },
                    "ref": null,
                    "rendered": "Prénom",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Titre",
                    },
                    "ref": null,
                    "rendered": "Titre",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Téléphone cellulaire",
                    },
                    "ref": null,
                    "rendered": "Téléphone cellulaire",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Téléphone bureau",
                    },
                    "ref": null,
                    "rendered": "Téléphone bureau",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Fax",
                    },
                    "ref": null,
                    "rendered": "Fax",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Préférence réception",
                    },
                    "ref": null,
                    "rendered": "Préférence réception",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tbody",
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`RechercheReferentForm ne crash pas RechercheReferentForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RechercheReferent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Form
          as="form"
          onSubmit={[Function]}
        >
          <h2>
            Rercherche d'un référent
          </h2>
          <FormField>
            <label>
              Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
              <br />
              <input
                name="recherche"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <Button
            as="button"
            primary={true}
            role="button"
          >
            Rechercher
          </Button>
        </Form>,
        <Table
          as="table"
          celled={true}
          padded={true}
        >
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                Numéro de référent
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Prénom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Titre
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Téléphone cellulaire
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Téléphone bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Préférence réception
              </TableHeaderCell>
            </TableRow>
          </TableHeader>
          <TableBody
            as="tbody"
          />
        </Table>,
      ],
      "className": "rechercheReferent",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": Array [
            <h2>
              Rercherche d'un référent
            </h2>,
            <FormField>
              <label>
                Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <Button
              as="button"
              primary={true}
              role="button"
            >
              Rechercher
            </Button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Rercherche d'un référent",
            },
            "ref": null,
            "rendered": "Rercherche d'un référent",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                  <br />,
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "recherche",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Rechercher",
              "primary": true,
              "role": "button",
            },
            "ref": null,
            "rendered": "Rechercher",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "table",
          "celled": true,
          "children": Array [
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                  Numéro de référent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone cellulaire
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Préférence réception
                </TableHeaderCell>
              </TableRow>
            </TableHeader>,
            <TableBody
              as="tbody"
            />,
          ],
          "padded": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "thead",
              "children": <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                  Numéro de référent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone cellulaire
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Préférence réception
                </TableHeaderCell>
              </TableRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                  >
                    Numéro de référent
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Nom
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Prénom
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Titre
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone cellulaire
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone bureau
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Préférence réception
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Numéro de référent",
                  },
                  "ref": null,
                  "rendered": "Numéro de référent",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Nom",
                  },
                  "ref": null,
                  "rendered": "Nom",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Prénom",
                  },
                  "ref": null,
                  "rendered": "Prénom",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Titre",
                  },
                  "ref": null,
                  "rendered": "Titre",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Téléphone cellulaire",
                  },
                  "ref": null,
                  "rendered": "Téléphone cellulaire",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Téléphone bureau",
                  },
                  "ref": null,
                  "rendered": "Téléphone bureau",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Fax",
                  },
                  "ref": null,
                  "rendered": "Fax",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Préférence réception",
                  },
                  "ref": null,
                  "rendered": "Préférence réception",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tbody",
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Form
            as="form"
            onSubmit={[Function]}
          >
            <h2>
              Rercherche d'un référent
            </h2>
            <FormField>
              <label>
                Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <Button
              as="button"
              primary={true}
              role="button"
            >
              Rechercher
            </Button>
          </Form>,
          <Table
            as="table"
            celled={true}
            padded={true}
          >
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                  Numéro de référent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone cellulaire
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Téléphone bureau
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Préférence réception
                </TableHeaderCell>
              </TableRow>
            </TableHeader>
            <TableBody
              as="tbody"
            />
          </Table>,
        ],
        "className": "rechercheReferent",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <h2>
                Rercherche d'un référent
              </h2>,
              <FormField>
                <label>
                  Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                  <br />
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <Button
                as="button"
                primary={true}
                role="button"
              >
                Rechercher
              </Button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Rercherche d'un référent",
              },
              "ref": null,
              "rendered": "Rercherche d'un référent",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :
                  <br />
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                    <br />,
                    <input
                      name="recherche"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Recherche par nom, prénom, nom d'organisme, titre, numéro de téléphone ou numéro de dossier de famille :",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "recherche",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": "Rechercher",
                "primary": true,
                "role": "button",
              },
              "ref": null,
              "rendered": "Rechercher",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "table",
            "celled": true,
            "children": Array [
              <TableHeader
                as="thead"
              >
                <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                  >
                    Numéro de référent
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Nom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Prénom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Titre
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone cellulaire
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone bureau
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Préférence réception
                  </TableHeaderCell>
                </TableRow>
              </TableHeader>,
              <TableBody
                as="tbody"
              />,
            ],
            "padded": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "thead",
                "children": <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                  >
                    Numéro de référent
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Nom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Prénom
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Titre
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone cellulaire
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Téléphone bureau
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Fax
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Préférence réception
                  </TableHeaderCell>
                </TableRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "tr",
                  "cellAs": "td",
                  "children": Array [
                    <TableHeaderCell
                      as="th"
                    >
                      Numéro de référent
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Nom
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Prénom
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Titre
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Téléphone cellulaire
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Téléphone bureau
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Fax
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Préférence réception
                    </TableHeaderCell>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Numéro de référent",
                    },
                    "ref": null,
                    "rendered": "Numéro de référent",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Nom",
                    },
                    "ref": null,
                    "rendered": "Nom",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Prénom",
                    },
                    "ref": null,
                    "rendered": "Prénom",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Titre",
                    },
                    "ref": null,
                    "rendered": "Titre",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Téléphone cellulaire",
                    },
                    "ref": null,
                    "rendered": "Téléphone cellulaire",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Téléphone bureau",
                    },
                    "ref": null,
                    "rendered": "Téléphone bureau",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Fax",
                    },
                    "ref": null,
                    "rendered": "Fax",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Préférence réception",
                    },
                    "ref": null,
                    "rendered": "Préférence réception",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tbody",
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`RechercherFamilleForm ne crash pas RechercherFamilleForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RechercheFamilleForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Form
          as="form"
          onSubmit={[Function]}
        >
          <h2>
             Rercherche d une famille
          </h2>
          <FormField>
            <label>
              Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : 
              <br />
              <input
                name="recherche"
                onChange={[Function]}
                type="text"
              />
            </label>
          </FormField>
          <Button
            as="button"
            primary={true}
            role="button"
          >
             Rechercher 
          </Button>
        </Form>,
        <Table
          as="table"
          celled={true}
          padded={true}
        >
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 choixFamille 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro de famille 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de la famille 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>
          <TableBody
            as="tbody"
          />
        </Table>,
      ],
      "className": "rechercheFamille",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": Array [
            <h2>
               Rercherche d une famille
            </h2>,
            <FormField>
              <label>
                Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : 
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>,
            <Button
              as="button"
              primary={true}
              role="button"
            >
               Rechercher 
            </Button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Rercherche d une famille",
            },
            "ref": null,
            "rendered": " Rercherche d une famille",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <label>
                Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : 
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : ",
                  <br />,
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "recherche",
                    "onChange": [Function],
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": " Rechercher ",
              "primary": true,
              "role": "button",
            },
            "ref": null,
            "rendered": " Rechercher ",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "table",
          "celled": true,
          "children": Array [
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                   choixFamille 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Numéro de famille 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Nom de la famille 
                </TableHeaderCell>
              </TableRow>
            </TableHeader>,
            <TableBody
              as="tbody"
            />,
          ],
          "padded": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "thead",
              "children": <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                   choixFamille 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Numéro de famille 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Nom de la famille 
                </TableHeaderCell>
              </TableRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                  >
                     choixFamille 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Numéro de famille 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Nom de la famille 
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " choixFamille ",
                  },
                  "ref": null,
                  "rendered": " choixFamille ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Numéro de famille ",
                  },
                  "ref": null,
                  "rendered": " Numéro de famille ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Nom de la famille ",
                  },
                  "ref": null,
                  "rendered": " Nom de la famille ",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tbody",
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Form
            as="form"
            onSubmit={[Function]}
          >
            <h2>
               Rercherche d une famille
            </h2>
            <FormField>
              <label>
                Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : 
                <br />
                <input
                  name="recherche"
                  onChange={[Function]}
                  type="text"
                />
              </label>
            </FormField>
            <Button
              as="button"
              primary={true}
              role="button"
            >
               Rechercher 
            </Button>
          </Form>,
          <Table
            as="table"
            celled={true}
            padded={true}
          >
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                >
                   choixFamille 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Numéro de famille 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Nom de la famille 
                </TableHeaderCell>
              </TableRow>
            </TableHeader>
            <TableBody
              as="tbody"
            />
          </Table>,
        ],
        "className": "rechercheFamille",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <h2>
                 Rercherche d une famille
              </h2>,
              <FormField>
                <label>
                  Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : 
                  <br />
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />
                </label>
              </FormField>,
              <Button
                as="button"
                primary={true}
                role="button"
              >
                 Rechercher 
              </Button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Rercherche d une famille",
              },
              "ref": null,
              "rendered": " Rercherche d une famille",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label>
                  Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : 
                  <br />
                  <input
                    name="recherche"
                    onChange={[Function]}
                    type="text"
                  />
                </label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : ",
                    <br />,
                    <input
                      name="recherche"
                      onChange={[Function]}
                      type="text"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Recherche par numéro de dossier, parent, tuteur, référent, enfant, une viste supervisée, un échange de garde : ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "br",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "recherche",
                      "onChange": [Function],
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": " Rechercher ",
                "primary": true,
                "role": "button",
              },
              "ref": null,
              "rendered": " Rechercher ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "table",
            "celled": true,
            "children": Array [
              <TableHeader
                as="thead"
              >
                <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                  >
                     choixFamille 
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                     Numéro de famille 
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                     Nom de la famille 
                  </TableHeaderCell>
                </TableRow>
              </TableHeader>,
              <TableBody
                as="tbody"
              />,
            ],
            "padded": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "thead",
                "children": <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                  >
                     choixFamille 
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                     Numéro de famille 
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                     Nom de la famille 
                  </TableHeaderCell>
                </TableRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "tr",
                  "cellAs": "td",
                  "children": Array [
                    <TableHeaderCell
                      as="th"
                    >
                       choixFamille 
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                       Numéro de famille 
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                       Nom de la famille 
                    </TableHeaderCell>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": " choixFamille ",
                    },
                    "ref": null,
                    "rendered": " choixFamille ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": " Numéro de famille ",
                    },
                    "ref": null,
                    "rendered": " Numéro de famille ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": " Nom de la famille ",
                    },
                    "ref": null,
                    "rendered": " Nom de la famille ",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tbody",
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`RefForm ne crash pas RefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              #
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Prénom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Titre
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Telephone cellulaire
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Telephone de bureau
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Fax
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Préférence
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Email
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              #
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Nom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Prénom
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Titre
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Telephone cellulaire
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Telephone de bureau
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Fax
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Préférence
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
              Email
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Prénom
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Titre
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Telephone cellulaire
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Telephone de bureau
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Préférence
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                Email
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "#",
                "singleLine": true,
              },
              "ref": null,
              "rendered": "#",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Nom",
              },
              "ref": null,
              "rendered": "Nom",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Prénom",
              },
              "ref": null,
              "rendered": "Prénom",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Titre",
              },
              "ref": null,
              "rendered": "Titre",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Telephone cellulaire",
              },
              "ref": null,
              "rendered": "Telephone cellulaire",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Telephone de bureau",
              },
              "ref": null,
              "rendered": "Telephone de bureau",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Fax",
              },
              "ref": null,
              "rendered": "Fax",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Préférence",
              },
              "ref": null,
              "rendered": "Préférence",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Email",
              },
              "ref": null,
              "rendered": "Email",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Prénom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Titre
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Telephone cellulaire
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Telephone de bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Préférence
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Email
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Nom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Prénom
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Titre
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Telephone cellulaire
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Telephone de bureau
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Fax
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Préférence
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Email
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  #
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Nom
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Prénom
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Titre
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Telephone cellulaire
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Telephone de bureau
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Fax
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Préférence
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                  Email
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "#",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": "#",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Nom",
                },
                "ref": null,
                "rendered": "Nom",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Prénom",
                },
                "ref": null,
                "rendered": "Prénom",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Titre",
                },
                "ref": null,
                "rendered": "Titre",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Telephone cellulaire",
                },
                "ref": null,
                "rendered": "Telephone cellulaire",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Telephone de bureau",
                },
                "ref": null,
                "rendered": "Telephone de bureau",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Fax",
                },
                "ref": null,
                "rendered": "Fax",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Préférence",
                },
                "ref": null,
                "rendered": "Préférence",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Email",
                },
                "ref": null,
                "rendered": "Email",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`ServiceForm ne crash pas ServiceForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServiceForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Modifier service 
        </h2>,
        undefined,
        <Table
          as="table"
          celled={true}
          padded={true}
        >
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                #
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                nom du service
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Tarification pour le parent
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Tarification subventionnée
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Tarification pour le CISS
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                État du service
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                Ajuster
              </TableHeaderCell>
            </TableRow>
          </TableHeader>
          <TableBody
            as="tbody"
          />
        </Table>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Modifier service ",
        },
        "ref": null,
        "rendered": "Modifier service ",
        "type": "h2",
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "table",
          "celled": true,
          "children": Array [
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  #
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  nom du service
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification pour le parent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification subventionnée
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification pour le CISS
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  État du service
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Ajuster
                </TableHeaderCell>
              </TableRow>
            </TableHeader>,
            <TableBody
              as="tbody"
            />,
          ],
          "padded": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "thead",
              "children": <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  #
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  nom du service
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification pour le parent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification subventionnée
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification pour le CISS
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  État du service
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Ajuster
                </TableHeaderCell>
              </TableRow>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                    #
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    nom du service
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification pour le parent
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification subventionnée
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification pour le CISS
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    État du service
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                    Ajuster
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "#",
                    "singleLine": true,
                  },
                  "ref": null,
                  "rendered": "#",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "nom du service",
                  },
                  "ref": null,
                  "rendered": "nom du service",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Tarification pour le parent",
                  },
                  "ref": null,
                  "rendered": "Tarification pour le parent",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Tarification subventionnée",
                  },
                  "ref": null,
                  "rendered": "Tarification subventionnée",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Tarification pour le CISS",
                  },
                  "ref": null,
                  "rendered": "Tarification pour le CISS",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "État du service",
                  },
                  "ref": null,
                  "rendered": "État du service",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": "Ajuster",
                  },
                  "ref": null,
                  "rendered": "Ajuster",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tbody",
              "children": Array [],
            },
            "ref": null,
            "rendered": Array [],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Modifier service 
          </h2>,
          undefined,
          <Table
            as="table"
            celled={true}
            padded={true}
          >
            <TableHeader
              as="thead"
            >
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  #
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  nom du service
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification pour le parent
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification subventionnée
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Tarification pour le CISS
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  État du service
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                  Ajuster
                </TableHeaderCell>
              </TableRow>
            </TableHeader>
            <TableBody
              as="tbody"
            />
          </Table>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Modifier service ",
          },
          "ref": null,
          "rendered": "Modifier service ",
          "type": "h2",
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "table",
            "celled": true,
            "children": Array [
              <TableHeader
                as="thead"
              >
                <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                    #
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    nom du service
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification pour le parent
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification subventionnée
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification pour le CISS
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    État du service
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Ajuster
                  </TableHeaderCell>
                </TableRow>
              </TableHeader>,
              <TableBody
                as="tbody"
              />,
            ],
            "padded": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "thead",
                "children": <TableRow
                  as="tr"
                  cellAs="td"
                >
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                    #
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    nom du service
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification pour le parent
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification subventionnée
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Tarification pour le CISS
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    État du service
                  </TableHeaderCell>
                  <TableHeaderCell
                    as="th"
                  >
                    Ajuster
                  </TableHeaderCell>
                </TableRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "tr",
                  "cellAs": "td",
                  "children": Array [
                    <TableHeaderCell
                      as="th"
                      singleLine={true}
                    >
                      #
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      nom du service
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Tarification pour le parent
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Tarification subventionnée
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Tarification pour le CISS
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      État du service
                    </TableHeaderCell>,
                    <TableHeaderCell
                      as="th"
                    >
                      Ajuster
                    </TableHeaderCell>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "#",
                      "singleLine": true,
                    },
                    "ref": null,
                    "rendered": "#",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "nom du service",
                    },
                    "ref": null,
                    "rendered": "nom du service",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Tarification pour le parent",
                    },
                    "ref": null,
                    "rendered": "Tarification pour le parent",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Tarification subventionnée",
                    },
                    "ref": null,
                    "rendered": "Tarification subventionnée",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Tarification pour le CISS",
                    },
                    "ref": null,
                    "rendered": "Tarification pour le CISS",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "État du service",
                    },
                    "ref": null,
                    "rendered": "État du service",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "th",
                      "children": "Ajuster",
                    },
                    "ref": null,
                    "rendered": "Ajuster",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tbody",
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateEmployeForm ne crash pas UpdateEmployeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateEmployeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro employe 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prénom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Mot de passe 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Role 
            </TableHeaderCell>
          </TableRow>
           
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
        "  ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": Array [
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro employe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Mot de passe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Role 
              </TableHeaderCell>
            </TableRow>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro employe 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Mot de passe 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Role 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro employe ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numéro employe ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Prénom ",
                },
                "ref": null,
                "rendered": " Prénom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone ",
                },
                "ref": null,
                "rendered": " Telephone ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Mot de passe ",
                },
                "ref": null,
                "rendered": " Mot de passe ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Role ",
                },
                "ref": null,
                "rendered": " Role ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
      "  ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro employe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Mot de passe 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Role 
              </TableHeaderCell>
            </TableRow>
             
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
          "  ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": Array [
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro employe 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Telephone 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Mot de passe 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Role 
                </TableHeaderCell>
              </TableRow>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                     Numéro employe 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Choisir 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Nom 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Prénom 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Telephone 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Mot de passe 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Role 
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Numéro employe ",
                    "singleLine": true,
                  },
                  "ref": null,
                  "rendered": " Numéro employe ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Choisir ",
                  },
                  "ref": null,
                  "rendered": " Choisir ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Nom ",
                  },
                  "ref": null,
                  "rendered": " Nom ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Prénom ",
                  },
                  "ref": null,
                  "rendered": " Prénom ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Telephone ",
                  },
                  "ref": null,
                  "rendered": " Telephone ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Mot de passe ",
                  },
                  "ref": null,
                  "rendered": " Mot de passe ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Role ",
                  },
                  "ref": null,
                  "rendered": " Role ",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
        "  ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateNoteForm ne crash pas UpdateNoteForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateNoteForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              Numéro de note
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom de l'intervenant 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               noFamille 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Message 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               NomPersonneConcerne
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Date 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              Numéro de note
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom de l'intervenant 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               noFamille 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Message 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               NomPersonneConcerne
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Date 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro de note
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom de l'intervenant 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 noFamille 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Message 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 NomPersonneConcerne
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Date 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Numéro de note",
                "singleLine": true,
              },
              "ref": null,
              "rendered": "Numéro de note",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom de l'intervenant ",
              },
              "ref": null,
              "rendered": " Nom de l'intervenant ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " noFamille ",
              },
              "ref": null,
              "rendered": " noFamille ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Message ",
              },
              "ref": null,
              "rendered": " Message ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " NomPersonneConcerne",
              },
              "ref": null,
              "rendered": " NomPersonneConcerne",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Date ",
              },
              "ref": null,
              "rendered": " Date ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro de note
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de l'intervenant 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 noFamille 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Message 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 NomPersonneConcerne
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Date 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro de note
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom de l'intervenant 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 noFamille 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Message 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 NomPersonneConcerne
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Date 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  Numéro de note
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom de l'intervenant 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   noFamille 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Message 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   NomPersonneConcerne
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Date 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Numéro de note",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": "Numéro de note",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom de l'intervenant ",
                },
                "ref": null,
                "rendered": " Nom de l'intervenant ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " noFamille ",
                },
                "ref": null,
                "rendered": " noFamille ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Message ",
                },
                "ref": null,
                "rendered": " Message ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " NomPersonneConcerne",
                },
                "ref": null,
                "rendered": " NomPersonneConcerne",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Date ",
                },
                "ref": null,
                "rendered": " Date ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateOrganismeForm ne crash pas UpdateOrganismeForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateOrganismeForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Nom 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom ",
                "singleLine": true,
              },
              "ref": null,
              "rendered": " Nom ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom organisme ",
              },
              "ref": null,
              "rendered": " Nom organisme ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom organisme 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom organisme ",
                },
                "ref": null,
                "rendered": " Nom organisme ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateOrganismeRefForm ne crash pas UpdateOrganismeRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateOrganismeRefFrom />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              Numéro Oraganisme
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Site Web 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Etat 
            </TableHeaderCell>
          </TableRow>
        </TableHeader>,
        <TableBody
          as="tbody"
        />,
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
              Numéro Oraganisme
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom organisme réferent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Numéro Civique 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Rue 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Ville 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Province 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Code Postal 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Télephone Bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Courriel 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Site Web 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Etat 
            </TableHeaderCell>
          </TableRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tr",
            "cellAs": "td",
            "children": Array [
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro Oraganisme
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>,
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Choisir ",
              },
              "ref": null,
              "rendered": " Choisir ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": "Numéro Oraganisme",
                "singleLine": true,
              },
              "ref": null,
              "rendered": "Numéro Oraganisme",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Nom organisme réferent ",
              },
              "ref": null,
              "rendered": " Nom organisme réferent ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Numéro Civique ",
              },
              "ref": null,
              "rendered": " Numéro Civique ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Rue ",
              },
              "ref": null,
              "rendered": " Rue ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Ville ",
              },
              "ref": null,
              "rendered": " Ville ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Province ",
              },
              "ref": null,
              "rendered": " Province ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Code Postal ",
              },
              "ref": null,
              "rendered": " Code Postal ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Télephone Bureau ",
              },
              "ref": null,
              "rendered": " Télephone Bureau ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Fax ",
              },
              "ref": null,
              "rendered": " Fax ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Courriel ",
              },
              "ref": null,
              "rendered": " Courriel ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Site Web ",
              },
              "ref": null,
              "rendered": " Site Web ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "th",
                "children": " Etat ",
              },
              "ref": null,
              "rendered": " Etat ",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro Oraganisme
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>
            </TableRow>
          </TableHeader>,
          <TableBody
            as="tbody"
          />,
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                Numéro Oraganisme
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom organisme réferent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Numéro Civique 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Rue 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Ville 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Province 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Code Postal 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Télephone Bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Courriel 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Site Web 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Etat 
              </TableHeaderCell>
            </TableRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                  Numéro Oraganisme
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom organisme réferent 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Numéro Civique 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Rue 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Ville 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Province 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Code Postal 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Télephone Bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Courriel 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Site Web 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Etat 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": "Numéro Oraganisme",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": "Numéro Oraganisme",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom organisme réferent ",
                },
                "ref": null,
                "rendered": " Nom organisme réferent ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro Civique ",
                },
                "ref": null,
                "rendered": " Numéro Civique ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Rue ",
                },
                "ref": null,
                "rendered": " Rue ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Ville ",
                },
                "ref": null,
                "rendered": " Ville ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Province ",
                },
                "ref": null,
                "rendered": " Province ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Code Postal ",
                },
                "ref": null,
                "rendered": " Code Postal ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Télephone Bureau ",
                },
                "ref": null,
                "rendered": " Télephone Bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Courriel ",
                },
                "ref": null,
                "rendered": " Courriel ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Site Web ",
                },
                "ref": null,
                "rendered": " Site Web ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Etat ",
                },
                "ref": null,
                "rendered": " Etat ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateRefForm ne crash pas UpdateRefForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateRefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro referent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prénom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Titre 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone cellulaire 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone de bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Préférence 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Email 
            </TableHeaderCell>
          </TableRow>
           
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
        " ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": Array [
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>
            </TableRow>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro referent 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Titre 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone cellulaire 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone de bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Préférence 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Email 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro referent ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numéro referent ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Prénom ",
                },
                "ref": null,
                "rendered": " Prénom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Titre ",
                },
                "ref": null,
                "rendered": " Titre ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone cellulaire ",
                },
                "ref": null,
                "rendered": " Telephone cellulaire ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone de bureau ",
                },
                "ref": null,
                "rendered": " Telephone de bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Préférence ",
                },
                "ref": null,
                "rendered": " Préférence ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Email ",
                },
                "ref": null,
                "rendered": " Email ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
      " ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>
            </TableRow>
             
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
          " ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": Array [
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro referent 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Titre 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Telephone cellulaire 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Telephone de bureau 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Préférence 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Email 
                </TableHeaderCell>
              </TableRow>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                     Numéro referent 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Choisir 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Nom 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Prénom 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Titre 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Telephone cellulaire 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Telephone de bureau 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Fax 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Préférence 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Email 
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Numéro referent ",
                    "singleLine": true,
                  },
                  "ref": null,
                  "rendered": " Numéro referent ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Choisir ",
                  },
                  "ref": null,
                  "rendered": " Choisir ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Nom ",
                  },
                  "ref": null,
                  "rendered": " Nom ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Prénom ",
                  },
                  "ref": null,
                  "rendered": " Prénom ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Titre ",
                  },
                  "ref": null,
                  "rendered": " Titre ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Telephone cellulaire ",
                  },
                  "ref": null,
                  "rendered": " Telephone cellulaire ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Telephone de bureau ",
                  },
                  "ref": null,
                  "rendered": " Telephone de bureau ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Fax ",
                  },
                  "ref": null,
                  "rendered": " Fax ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Préférence ",
                  },
                  "ref": null,
                  "rendered": " Préférence ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Email ",
                  },
                  "ref": null,
                  "rendered": " Email ",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
        " ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UpdateServiceForm ne crash pas UpdateServiceForm affiche sans chash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateRefForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "table",
      "celled": true,
      "children": Array [
        <TableHeader
          as="thead"
        >
          <TableRow
            as="tr"
            cellAs="td"
          >
            <TableHeaderCell
              as="th"
              singleLine={true}
            >
               Numéro referent 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Choisir 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Nom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Prénom 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Titre 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone cellulaire 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Telephone de bureau 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Fax 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Préférence 
            </TableHeaderCell>
            <TableHeaderCell
              as="th"
            >
               Email 
            </TableHeaderCell>
          </TableRow>
           
        </TableHeader>,
        <TableBody
          as="tbody"
        >
           
           
        </TableBody>,
        " ",
      ],
      "padded": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "thead",
          "children": Array [
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>
            </TableRow>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "tr",
              "cellAs": "td",
              "children": Array [
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro referent 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Titre 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone cellulaire 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Telephone de bureau 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Préférence 
                </TableHeaderCell>,
                <TableHeaderCell
                  as="th"
                >
                   Email 
                </TableHeaderCell>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Numéro referent ",
                  "singleLine": true,
                },
                "ref": null,
                "rendered": " Numéro referent ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Choisir ",
                },
                "ref": null,
                "rendered": " Choisir ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Nom ",
                },
                "ref": null,
                "rendered": " Nom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Prénom ",
                },
                "ref": null,
                "rendered": " Prénom ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Titre ",
                },
                "ref": null,
                "rendered": " Titre ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone cellulaire ",
                },
                "ref": null,
                "rendered": " Telephone cellulaire ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Telephone de bureau ",
                },
                "ref": null,
                "rendered": " Telephone de bureau ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Fax ",
                },
                "ref": null,
                "rendered": " Fax ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Préférence ",
                },
                "ref": null,
                "rendered": " Préférence ",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "th",
                  "children": " Email ",
                },
                "ref": null,
                "rendered": " Email ",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "tbody",
          "children": Array [
            " ",
            Array [],
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          " ",
        ],
        "type": [Function],
      },
      " ",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "table",
        "celled": true,
        "children": Array [
          <TableHeader
            as="thead"
          >
            <TableRow
              as="tr"
              cellAs="td"
            >
              <TableHeaderCell
                as="th"
                singleLine={true}
              >
                 Numéro referent 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Choisir 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Nom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Prénom 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Titre 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone cellulaire 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Telephone de bureau 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Fax 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Préférence 
              </TableHeaderCell>
              <TableHeaderCell
                as="th"
              >
                 Email 
              </TableHeaderCell>
            </TableRow>
             
          </TableHeader>,
          <TableBody
            as="tbody"
          >
             
             
          </TableBody>,
          " ",
        ],
        "padded": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "thead",
            "children": Array [
              <TableRow
                as="tr"
                cellAs="td"
              >
                <TableHeaderCell
                  as="th"
                  singleLine={true}
                >
                   Numéro referent 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Choisir 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Nom 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Prénom 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Titre 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Telephone cellulaire 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Telephone de bureau 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Fax 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Préférence 
                </TableHeaderCell>
                <TableHeaderCell
                  as="th"
                >
                   Email 
                </TableHeaderCell>
              </TableRow>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "tr",
                "cellAs": "td",
                "children": Array [
                  <TableHeaderCell
                    as="th"
                    singleLine={true}
                  >
                     Numéro referent 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Choisir 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Nom 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Prénom 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Titre 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Telephone cellulaire 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Telephone de bureau 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Fax 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Préférence 
                  </TableHeaderCell>,
                  <TableHeaderCell
                    as="th"
                  >
                     Email 
                  </TableHeaderCell>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Numéro referent ",
                    "singleLine": true,
                  },
                  "ref": null,
                  "rendered": " Numéro referent ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Choisir ",
                  },
                  "ref": null,
                  "rendered": " Choisir ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Nom ",
                  },
                  "ref": null,
                  "rendered": " Nom ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Prénom ",
                  },
                  "ref": null,
                  "rendered": " Prénom ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Titre ",
                  },
                  "ref": null,
                  "rendered": " Titre ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Telephone cellulaire ",
                  },
                  "ref": null,
                  "rendered": " Telephone cellulaire ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Telephone de bureau ",
                  },
                  "ref": null,
                  "rendered": " Telephone de bureau ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Fax ",
                  },
                  "ref": null,
                  "rendered": " Fax ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Préférence ",
                  },
                  "ref": null,
                  "rendered": " Préférence ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "th",
                    "children": " Email ",
                  },
                  "ref": null,
                  "rendered": " Email ",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "tbody",
            "children": Array [
              " ",
              Array [],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            " ",
          ],
          "type": [Function],
        },
        " ",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
